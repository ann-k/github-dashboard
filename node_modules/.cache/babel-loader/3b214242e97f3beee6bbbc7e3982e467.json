{"ast":null,"code":"var _jsxFileName = \"/Users/Anna/github/avito-trainee-task/src/Home/Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport SearchField from './SearchField.js';\nimport ResultList from './ResultList.js';\nimport Paginator from './Paginator.js';\n\nconst axios = require('axios');\n\nvar numeral = require('numeral'); // what new stuff i learned in this project:\n// used hooks for the first time (state, effect, ref)\n// used react router (with nested routes)\n// used axios instead of fetch\n// learned about local storage and session storage and how to use them\n// cancel axios request when typing\n// library Numerals js for shortening numbers\n// TO DO\n// localstorage\n// коммит и публикация на github pages\n// проблема с тем что все загружается в разное время\n\n\nfunction Home(props) {\n  const [result, setResult] = useState({\n    repos: []\n  });\n  const [preloader, setPreloader] = useState(false);\n  const [totalCount, setTotalCount] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const perPage = '10';\n  const defaultQuery = 'stars:>100';\n  const storedQuery = sessionStorage.getItem('query');\n  const [userQuery, setUserQuery] = useState(storedQuery ? storedQuery : defaultQuery);\n\n  function handleSearch(value) {\n    setUserQuery(value);\n    setResult({\n      repos: []\n    });\n    setPreloader(true);\n    setCurrentPage(1);\n    sessionStorage.setItem('query', value);\n  }\n\n  function handlePaginatorClick(pageNumber) {\n    setCurrentPage(pageNumber);\n    setResult({\n      repos: []\n    });\n  } // useEffect(() => {\n  //   const storedQuery = sessionStorage.getItem('query')\n  //   console.log(storedQuery);\n  //   if (storedQuery !== '') setUserQuery(storedQuery)\n  //   // setCurrentPage(sessionStorage.getItem('page').to_i)\n  // }, [])\n  // useEffect(() => {\n  //   sessionStorage.setItem('query', userQuery)\n  //   // sessionStorage.setItem('page', String(currentPage))\n  // }, [userQuery, currentPage])\n\n\n  useEffect(() => {\n    setPreloader(true);\n    let query;\n\n    if (userQuery !== '') {\n      query = userQuery;\n    } else if (storedQuery) {\n      query = storedQuery;\n    } else {\n      query = defaultQuery;\n    }\n\n    const url = `https://api.github.com/search/repositories?q=${query}&sort=stars&order=desc&per_page=${perPage}&page=${currentPage}`;\n    const headers = {\n      'Authorization': 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c'\n    };\n    let cancel;\n    axios.get(url, {\n      headers: headers,\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(response => {\n      setTotalCount(response.data.total_count);\n      const items = response.data.items;\n      const repos = [];\n      const headers = {\n        'Authorization': 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c'\n      };\n      items.map((item, index) => {\n        function fetchAdditionalData() {\n          function fetchLastCommitDate() {\n            return axios.get(`https://api.github.com/repos/${item.owner.login}/${item.name}/commits`, {\n              'headers': headers\n            });\n          }\n\n          function fetchLanguages() {\n            return axios.get(item.languages_url, {\n              'headers': headers\n            });\n          }\n\n          function fetchContributors() {\n            return axios.get(item.contributors_url, {\n              'headers': headers\n            });\n          }\n\n          Promise.all([fetchLastCommitDate(), fetchLanguages(), fetchContributors()]).then(function (results) {\n            const [commitsData, languagesData, contributorsData] = results;\n            const lastCommitDate = new Date(commitsData.data[0].commit.committer.date).toLocaleDateString();\n            const languages = Object.keys(languagesData.data);\n            const contributors = contributorsData.data.filter((c, index) => index < 10).map(c => c.avatar_url);\n            const repo = {\n              id: item.id,\n              name: item.name,\n              url: item.html_url,\n              ownerName: item.owner.login,\n              ownerPhoto: item.owner.avatar_url,\n              ownerUrl: item.owner.html_url,\n              description: item.description,\n              stars: numeral(item.stargazers_count).format('0 a'),\n              lastCommitDate: lastCommitDate,\n              languages: languages,\n              contributors: contributors\n            };\n            repos[index] = repo;\n            setResult({\n              repos: repos\n            });\n          });\n        }\n\n        fetchAdditionalData();\n      });\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n    }).then(() => setPreloader(false));\n    return () => cancel();\n  }, [userQuery, currentPage]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchField, {\n    userQuery: userQuery,\n    storedQuery: storedQuery,\n    onInputChange: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ResultList, {\n    repos: result.repos,\n    preloader: preloader,\n    totalCount: totalCount,\n    userQuery: userQuery,\n    onResultItemClick: props.onResultItemClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paginator, {\n    currentPage: currentPage,\n    preloader: preloader,\n    totalCount: totalCount,\n    perPage: perPage,\n    userQuery: userQuery,\n    onPaginatorClick: handlePaginatorClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/Anna/github/avito-trainee-task/src/Home/Home.js"],"names":["React","useState","useEffect","SearchField","ResultList","Paginator","axios","require","numeral","Home","props","result","setResult","repos","preloader","setPreloader","totalCount","setTotalCount","currentPage","setCurrentPage","perPage","defaultQuery","storedQuery","sessionStorage","getItem","userQuery","setUserQuery","handleSearch","value","setItem","handlePaginatorClick","pageNumber","query","url","headers","cancel","get","cancelToken","CancelToken","c","then","response","data","total_count","items","map","item","index","fetchAdditionalData","fetchLastCommitDate","owner","login","name","fetchLanguages","languages_url","fetchContributors","contributors_url","Promise","all","results","commitsData","languagesData","contributorsData","lastCommitDate","Date","commit","committer","date","toLocaleDateString","languages","Object","keys","contributors","filter","avatar_url","repo","id","html_url","ownerName","ownerPhoto","ownerUrl","description","stars","stargazers_count","format","catch","e","isCancel","onResultItemClick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport SearchField from './SearchField.js'\nimport ResultList from './ResultList.js'\nimport Paginator from './Paginator.js'\nconst axios = require('axios')\nvar numeral = require('numeral')\n\n// what new stuff i learned in this project:\n// used hooks for the first time (state, effect, ref)\n// used react router (with nested routes)\n// used axios instead of fetch\n// learned about local storage and session storage and how to use them\n// cancel axios request when typing\n// library Numerals js for shortening numbers\n\n// TO DO\n// localstorage\n// коммит и публикация на github pages\n// проблема с тем что все загружается в разное время\n\nfunction Home(props) {\n  const [result, setResult] = useState({repos: []})\n  const [preloader, setPreloader] = useState(false)\n\n  const [totalCount, setTotalCount] = useState(0)\n  const [currentPage, setCurrentPage] = useState(1)\n  const perPage = '10'\n\n  const defaultQuery = 'stars:>100'\n  const storedQuery = sessionStorage.getItem('query')\n  const [userQuery, setUserQuery] = useState(storedQuery ? storedQuery : defaultQuery)\n\n  function handleSearch(value) {\n    setUserQuery(value)\n    setResult({repos: []})\n    setPreloader(true)\n    setCurrentPage(1)\n    sessionStorage.setItem('query', value)\n  }\n\n  function handlePaginatorClick(pageNumber) {\n    setCurrentPage(pageNumber)\n    setResult({repos: []})\n  }\n\n  // useEffect(() => {\n  //   const storedQuery = sessionStorage.getItem('query')\n  //   console.log(storedQuery);\n  //   if (storedQuery !== '') setUserQuery(storedQuery)\n  //   // setCurrentPage(sessionStorage.getItem('page').to_i)\n  // }, [])\n\n  // useEffect(() => {\n  //   sessionStorage.setItem('query', userQuery)\n  //   // sessionStorage.setItem('page', String(currentPage))\n  // }, [userQuery, currentPage])\n\n  useEffect(() => {\n    setPreloader(true)\n    let query\n    if (userQuery !== '') {\n      query = userQuery\n    }\n    else if (storedQuery) {\n      query = storedQuery\n    } else {\n      query = defaultQuery\n    }\n\n    const url = `https://api.github.com/search/repositories?q=${query}&sort=stars&order=desc&per_page=${perPage}&page=${currentPage}`\n    const headers = { 'Authorization' : 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c' }\n    let cancel\n\n    axios.get(url, {\n      headers: headers,\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    })\n    .then(response => {\n      setTotalCount(response.data.total_count)\n      const items = response.data.items\n      const repos = []\n      const headers = { 'Authorization' : 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c' }\n\n      items.map((item, index) => {\n        function fetchAdditionalData() {\n          function fetchLastCommitDate() {\n            return axios.get(`https://api.github.com/repos/${item.owner.login}/${item.name}/commits`, { 'headers': headers })\n          }\n\n          function fetchLanguages() {\n            return axios.get(item.languages_url, { 'headers': headers })\n          }\n\n          function fetchContributors() {\n            return axios.get(item.contributors_url, { 'headers': headers })\n          }\n\n          Promise.all([fetchLastCommitDate(), fetchLanguages(), fetchContributors()])\n          .then(function (results) {\n            const [commitsData, languagesData, contributorsData] = results\n\n            const lastCommitDate = new Date(commitsData.data[0].commit.committer.date).toLocaleDateString()\n\n            const languages = Object.keys(languagesData.data)\n\n            const contributors = contributorsData.data\n            .filter((c, index) => index < 10)\n            .map(c => c.avatar_url)\n\n            const repo = {\n              id:             item.id,\n              name:           item.name,\n              url:            item.html_url,\n              ownerName:      item.owner.login,\n              ownerPhoto:     item.owner.avatar_url,\n              ownerUrl:       item.owner.html_url,\n              description:    item.description,\n              stars:          numeral(item.stargazers_count).format('0 a'),\n              lastCommitDate: lastCommitDate,\n              languages:      languages,\n              contributors:   contributors,\n            }\n\n            repos[index] = repo\n            setResult({repos: repos})\n            })\n          }\n        fetchAdditionalData()\n      })\n    })\n    .catch(e => {\n      if (axios.isCancel(e)) return\n    })\n    .then(() => setPreloader(false))\n    return () => cancel()\n  }, [userQuery, currentPage])\n\n  return (\n    <div className='Home'>\n      <SearchField userQuery={userQuery}\n                   storedQuery={storedQuery}\n                   onInputChange={handleSearch} />\n\n      <ResultList repos={result.repos}\n                  preloader={preloader}\n                  totalCount={totalCount}\n                  userQuery={userQuery}\n                  onResultItemClick={props.onResultItemClick} />\n\n      <Paginator currentPage={currentPage}\n                 preloader={preloader}\n                 totalCount={totalCount}\n                 perPage={perPage}\n                 userQuery={userQuery}\n                 onPaginatorClick={handlePaginatorClick} />\n    </div>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}