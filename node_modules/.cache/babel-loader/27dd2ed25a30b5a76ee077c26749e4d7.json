{"ast":null,"code":"var _jsxFileName = \"/Users/Anna/github/avito-trainee-task/src/Home.js\";\nimport React, { useState } from 'react';\nimport SearchField from './SearchField.js';\nimport ResultList from './ResultList.js';\nimport Paginator from './Paginator.js';\n\nconst axios = require('axios'); //HANDLE NO RESULTS!!!\n//PRELOADER\n//what if no owner photo is provided\n// what new i learned in this project:\n// used hooks for the first time\n// used react router (with nested routes)\n// used axios instead of fetch\n\n\nfunction Home(props) {\n  const defaultQuery = 'stars:>100';\n  const [result, setResult] = useState({\n    repos: []\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [query, _setQuery] = useState('');\n  const queryRef = React.useRef(query);\n\n  function setQuery(data) {\n    queryRef.current = data;\n\n    _setQuery(data);\n  }\n\n  function handlePaginatorClick(pageNumber) {\n    getData(queryRef.current, String(pageNumber));\n    setCurrentPage(pageNumber);\n  }\n\n  function getData(query, page) {\n    const url = `https://api.github.com/search/repositories?q=${query}&sort=stars&order=desc&per_page=10&page=${page}`;\n    const headers = {\n      'Authorization': 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c'\n    };\n    axios.get(url, {\n      'headers': headers\n    }).then(response => fetchRepos(response.data.items));\n  }\n\n  function fetchRepos(items) {\n    const repos = [];\n    items.map((item, index) => {\n      const headers = {\n        'Authorization': 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c'\n      };\n      let gatherAdditionalData = fetchLastCommitDate(item);\n\n      function fetchLastCommitDate(item) {\n        const url = `https://api.github.com/repos/${item.owner.login}/${item.name}/commits`;\n        axios.get(url, {\n          'headers': headers\n        }).then(response => {\n          const date = new Date(response.data[0].commit.committer.date).toLocaleDateString();\n          fetchLanguages(item, date);\n        });\n      }\n\n      function fetchLanguages(item, date) {\n        const url = item.languages_url;\n        axios.get(url, {\n          'headers': headers\n        }).then(languages => fetchContributors(item, date, Object.keys(languages)));\n      }\n\n      function fetchContributors(item, date, languages) {\n        const url = item.contributors_url;\n        axios.get(url, {\n          'headers': headers\n        }).then(response => {\n          const neededParametres = ['login', 'contributions'];\n          let filteredContributors = response.data.filter((item, index) => index < 10).map(item => {\n            const contributor = {};\n            Object.keys(item).filter(key => neededParametres.includes(key)).map(key => contributor[key] = item[key]);\n            return contributor;\n          });\n          combineRepo(item, date, languages, filteredContributors);\n        });\n      }\n\n      function combineRepo(item, date, languages, contributors) {\n        let repo = {\n          name: item.name,\n          stars: item.stargazers_count,\n          url: item.html_url,\n          lastCommitDate: date,\n          languages: languages,\n          ownerName: item.owner.login,\n          ownerPhoto: item.owner.avatar_url,\n          ownerUrl: item.owner.html_url,\n          description: item.description,\n          contributors: contributors\n        };\n        repos.push(repo);\n        setResult({\n          repos: repos\n        }); // if (index + 1 === items.length) {setResult({repos: repos})}\n      }\n    });\n  } // window.addEventListener('load', () => getData(defaultQuery, '1'))\n\n\n  function handleSearch(value) {\n    setQuery(value);\n    value !== '' ? getData(value, '1') : getData(defaultQuery, '1');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchField, {\n    onInputChange: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ResultList, {\n    repos: result.repos,\n    onResultItemClick: props.onResultItemClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paginator, {\n    currentPage: currentPage,\n    onPaginatorClick: handlePaginatorClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/Anna/github/avito-trainee-task/src/Home.js"],"names":["React","useState","SearchField","ResultList","Paginator","axios","require","Home","props","defaultQuery","result","setResult","repos","currentPage","setCurrentPage","query","_setQuery","queryRef","useRef","setQuery","data","current","handlePaginatorClick","pageNumber","getData","String","page","url","headers","get","then","response","fetchRepos","items","map","item","index","gatherAdditionalData","fetchLastCommitDate","owner","login","name","date","Date","commit","committer","toLocaleDateString","fetchLanguages","languages_url","languages","fetchContributors","Object","keys","contributors_url","neededParametres","filteredContributors","filter","contributor","key","includes","combineRepo","contributors","repo","stars","stargazers_count","html_url","lastCommitDate","ownerName","ownerPhoto","avatar_url","ownerUrl","description","push","handleSearch","value","onResultItemClick"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport SearchField from './SearchField.js'\nimport ResultList from './ResultList.js'\nimport Paginator from './Paginator.js'\nconst axios = require('axios')\n\n//HANDLE NO RESULTS!!!\n//PRELOADER\n//what if no owner photo is provided\n// what new i learned in this project:\n// used hooks for the first time\n// used react router (with nested routes)\n// used axios instead of fetch\n\nfunction Home(props) {\n  const defaultQuery = 'stars:>100'\n  const [result, setResult] = useState({repos: []})\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const [query, _setQuery] = useState('')\n  const queryRef = React.useRef(query)\n\n  function setQuery(data) {\n    queryRef.current = data\n    _setQuery(data)\n  }\n\n  function handlePaginatorClick(pageNumber) {\n    getData(queryRef.current, String(pageNumber))\n    setCurrentPage(pageNumber)\n  }\n\n  function getData(query, page) {\n    const url = `https://api.github.com/search/repositories?q=${query}&sort=stars&order=desc&per_page=10&page=${page}`\n    const headers = { 'Authorization' : 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c' }\n\n    axios.get(url, { 'headers': headers })\n    .then(response => fetchRepos(response.data.items))\n  }\n\n\n\n  function fetchRepos(items) {\n    const repos = []\n\n    items.map((item, index) => {\n      const headers = { 'Authorization' : 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c' }\n      let gatherAdditionalData = fetchLastCommitDate(item)\n\n      function fetchLastCommitDate(item) {\n        const url = `https://api.github.com/repos/${item.owner.login}/${item.name}/commits`\n        axios.get(url, { 'headers': headers })\n        .then(response => {\n          const date = new Date(response.data[0].commit.committer.date).toLocaleDateString()\n          fetchLanguages(item, date)\n        })\n      }\n\n      function fetchLanguages(item, date) {\n        const url = item.languages_url\n        axios.get(url, { 'headers': headers })\n        .then(languages => fetchContributors(item, date, Object.keys(languages)))\n      }\n\n      function fetchContributors(item, date, languages) {\n        const url = item.contributors_url\n        axios.get(url, { 'headers': headers })\n        .then(response => {\n          const neededParametres = ['login', 'contributions']\n          let filteredContributors = response.data\n          .filter((item, index) => index < 10)\n          .map(item => {\n            const contributor = {}\n            Object.keys(item)\n            .filter(key => neededParametres.includes(key))\n            .map(key => contributor[key] = item[key])\n            return contributor\n          })\n          combineRepo(item, date, languages, filteredContributors)\n        })\n      }\n\n      function combineRepo(item, date, languages, contributors) {\n        let repo = {\n          name:           item.name,\n          stars:          item.stargazers_count,\n          url:            item.html_url,\n          lastCommitDate: date,\n          languages:      languages,\n          ownerName:      item.owner.login,\n          ownerPhoto:     item.owner.avatar_url,\n          ownerUrl:       item.owner.html_url,\n          description:    item.description,\n          contributors:   contributors,\n        }\n        repos.push(repo)\n        setResult({repos: repos})\n        // if (index + 1 === items.length) {setResult({repos: repos})}\n      }\n    })\n  }\n\n  // window.addEventListener('load', () => getData(defaultQuery, '1'))\n\n  function handleSearch(value) {\n    setQuery(value);\n    (value !== '') ? getData(value, '1') : getData(defaultQuery, '1')\n  }\n\n  return (\n    <div className='Home'>\n      <SearchField onInputChange={handleSearch} />\n      <ResultList repos={result.repos} onResultItemClick={props.onResultItemClick} />\n      <Paginator currentPage={currentPage} onPaginatorClick={handlePaginatorClick} />\n    </div>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}