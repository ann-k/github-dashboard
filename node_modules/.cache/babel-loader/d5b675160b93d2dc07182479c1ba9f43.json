{"ast":null,"code":"var _jsxFileName = \"/Users/Anna/github/avito-trainee-task/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport SearchField from './SearchField.js';\nimport ResultList from './ResultList.js';\n\nfunction App() {\n  const [result, setResult] = useState({\n    repos: []\n  });\n  const [query, setQuery] = useState(''); // if (query === '') {\n  //   console.log('HI');\n  //   getBestRepos()\n  // }\n  //\n  // function getBestRepos() {\n  //   fetch('https://api.github.com/search/repositories?q=stars:>100&sort=stars&order=desc&per_page=10&page=1')\n  //   .then(response => response.json())\n  //   .then(data => setResult({repos: data.items}))\n  // }\n\n  function getRepos(query) {\n    fetch('https://api.github.com/search/repositories?q=' + query + '&sort=stars&order=desc&per_page=10&page=1').then(response => {\n      console.log(response);\n      return response.json();\n    }).then(data => setResult({\n      repos: data.items\n    }));\n  }\n\n  function handleSearchInputChange(value) {\n    if (value === '') {\n      setQuery('stars:>100');\n    } else {\n      setQuery(value);\n      getRepos(value);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchField, {\n    onInputChange: handleSearchInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ResultList, {\n    repos: result.repos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Anna/github/avito-trainee-task/src/App.js"],"names":["React","useState","SearchField","ResultList","App","result","setResult","repos","query","setQuery","getRepos","fetch","then","response","console","log","json","data","items","handleSearchInputChange","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC;AAACM,IAAAA,KAAK,EAAE;AAAR,GAAD,CAApC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC,CAFa,CAIb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAASS,QAAT,CAAkBF,KAAlB,EAAyB;AACvBG,IAAAA,KAAK,CAAC,kDAAkDH,KAAlD,GAA0D,2CAA3D,CAAL,CACCI,IADD,CACMC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,aAAOA,QAAQ,CAACG,IAAT,EAAP;AACD,KAJD,EAKCJ,IALD,CAKMK,IAAI,IAAIX,SAAS,CAAC;AAACC,MAAAA,KAAK,EAAEU,IAAI,CAACC;AAAb,KAAD,CALvB;AAMD;;AAED,WAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AACtC,QAAIA,KAAK,KAAK,EAAd,EAAkB;AAACX,MAAAA,QAAQ,CAAC,YAAD,CAAR;AAAuB,KAA1C,MAAgD;AAC9CA,MAAAA,QAAQ,CAACW,KAAD,CAAR;AACAV,MAAAA,QAAQ,CAACU,KAAD,CAAR;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,aAAa,EAAED,uBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEd,MAAM,CAACE,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport './App.css';\nimport SearchField from './SearchField.js'\nimport ResultList from './ResultList.js'\n\nfunction App() {\n  const [result, setResult] = useState({repos: []})\n  const [query, setQuery] = useState('')\n\n  // if (query === '') {\n  //   console.log('HI');\n  //   getBestRepos()\n  // }\n  //\n  // function getBestRepos() {\n  //   fetch('https://api.github.com/search/repositories?q=stars:>100&sort=stars&order=desc&per_page=10&page=1')\n  //   .then(response => response.json())\n  //   .then(data => setResult({repos: data.items}))\n  // }\n\n  function getRepos(query) {\n    fetch('https://api.github.com/search/repositories?q=' + query + '&sort=stars&order=desc&per_page=10&page=1')\n    .then(response => {\n      console.log(response);\n      return response.json()\n    })\n    .then(data => setResult({repos: data.items}))\n  }\n\n  function handleSearchInputChange(value) {\n    if (value === '') {setQuery('stars:>100')} else {\n      setQuery(value)\n      getRepos(value)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <SearchField onInputChange={handleSearchInputChange} />\n      <ResultList repos={result.repos} />\n    </div>\n  );\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}