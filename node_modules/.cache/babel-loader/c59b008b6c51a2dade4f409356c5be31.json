{"ast":null,"code":"var _jsxFileName = \"/Users/Anna/github/avito-trainee-task/src/Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport SearchField from './SearchField.js';\nimport ResultList from './ResultList.js';\nimport Paginator from './Paginator.js';\n\nconst axios = require('axios'); //HANDLE NO RESULTS!!!\n//PRELOADER\n//what if no owner photo is provided\n// what new i learned in this project:\n// used hooks for the first time\n// used react router (with nested routes)\n// used axios instead of fetch\n\n\nfunction Home(props) {\n  const [result, setResult] = useState({\n    repos: []\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [preloader, setPreloader] = useState(false);\n  const [query, _setQuery] = useState('');\n  const queryRef = React.useRef(query);\n  const defaultQuery = 'stars:>100';\n\n  function setQuery(data) {\n    queryRef.current = data;\n\n    _setQuery(data);\n  }\n\n  function handlePaginatorClick(pageNumber) {\n    fetchRepos(queryRef.current, String(pageNumber));\n    setCurrentPage(pageNumber);\n  }\n\n  function fetchRepos(query, page) {\n    console.log('loading');\n    const url = `https://api.github.com/search/repositories?q=${query}&sort=stars&order=desc&per_page=10&page=${page}`;\n    const headers = {\n      'Authorization': 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c'\n    };\n    axios.get(url, {\n      'headers': headers\n    }).then(response => {\n      const items = response.data.items;\n      const repos = [];\n      const headers = {\n        'Authorization': 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c'\n      };\n      items.map((item, index) => {\n        function fetchAdditionalData() {\n          function fetchLastCommitDate() {\n            return axios.get(`https://api.github.com/repos/${item.owner.login}/${item.name}/commits`, {\n              'headers': headers\n            });\n          }\n\n          function fetchLanguages() {\n            return axios.get(item.languages_url, {\n              'headers': headers\n            });\n          }\n\n          function fetchContributors() {\n            return axios.get(item.contributors_url, {\n              'headers': headers\n            });\n          }\n\n          Promise.all([fetchLastCommitDate(), fetchLanguages(), fetchContributors()]).then(function (results) {\n            const [commitsData, languagesData, contributorsData] = results;\n            const lastCommitDate = new Date(commitsData.data[0].commit.committer.date).toLocaleDateString();\n            const languages = Object.keys(languagesData.data);\n            const parametres = ['login'];\n            let filteredContributors = contributorsData.data.filter((item, index) => index < 10).map(item => {\n              const contributor = {};\n              Object.keys(item).filter(key => parametres.includes(key)).map(key => contributor[key] = item[key]);\n              return contributor;\n            });\n            const repo = {\n              name: item.name,\n              stars: item.stargazers_count,\n              url: item.html_url,\n              lastCommitDate: lastCommitDate,\n              languages: languages,\n              ownerName: item.owner.login,\n              ownerPhoto: item.owner.avatar_url,\n              ownerUrl: item.owner.html_url,\n              description: item.description,\n              contributors: filteredContributors\n            };\n            repos[index] = repo;\n            setResult({\n              repos: repos\n            });\n          });\n        }\n\n        fetchAdditionalData();\n        console.log('loading finished');\n      });\n    });\n  }\n\n  function handleSearch(value) {\n    setQuery(value);\n    value !== '' ? fetchRepos(value, '1') : fetchRepos(defaultQuery, '1');\n  }\n\n  useEffect(() => {\n    fetchRepos(defaultQuery, '1');\n  }, []);\n  useEffect(() => {// console.log('loading');\n  }, [result]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchField, {\n    onInputChange: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ResultList, {\n    repos: result.repos,\n    onResultItemClick: props.onResultItemClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paginator, {\n    currentPage: currentPage,\n    onPaginatorClick: handlePaginatorClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/Anna/github/avito-trainee-task/src/Home.js"],"names":["React","useState","useEffect","SearchField","ResultList","Paginator","axios","require","Home","props","result","setResult","repos","currentPage","setCurrentPage","preloader","setPreloader","query","_setQuery","queryRef","useRef","defaultQuery","setQuery","data","current","handlePaginatorClick","pageNumber","fetchRepos","String","page","console","log","url","headers","get","then","response","items","map","item","index","fetchAdditionalData","fetchLastCommitDate","owner","login","name","fetchLanguages","languages_url","fetchContributors","contributors_url","Promise","all","results","commitsData","languagesData","contributorsData","lastCommitDate","Date","commit","committer","date","toLocaleDateString","languages","Object","keys","parametres","filteredContributors","filter","contributor","key","includes","repo","stars","stargazers_count","html_url","ownerName","ownerPhoto","avatar_url","ownerUrl","description","contributors","handleSearch","value","onResultItemClick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport SearchField from './SearchField.js'\nimport ResultList from './ResultList.js'\nimport Paginator from './Paginator.js'\nconst axios = require('axios')\n\n//HANDLE NO RESULTS!!!\n//PRELOADER\n//what if no owner photo is provided\n// what new i learned in this project:\n// used hooks for the first time\n// used react router (with nested routes)\n// used axios instead of fetch\n\nfunction Home(props) {\n  const [result, setResult] = useState({repos: []})\n  const [currentPage, setCurrentPage] = useState(1)\n  const [preloader, setPreloader] = useState(false)\n  const [query, _setQuery] = useState('')\n  const queryRef = React.useRef(query)\n  const defaultQuery = 'stars:>100'\n\n  function setQuery(data) {\n    queryRef.current = data\n    _setQuery(data)\n  }\n\n  function handlePaginatorClick(pageNumber) {\n    fetchRepos(queryRef.current, String(pageNumber))\n    setCurrentPage(pageNumber)\n  }\n\n  function fetchRepos(query, page) {\n    console.log('loading');\n\n    const url = `https://api.github.com/search/repositories?q=${query}&sort=stars&order=desc&per_page=10&page=${page}`\n    const headers = { 'Authorization' : 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c' }\n\n    axios.get(url, { 'headers': headers })\n    .then(response => {\n      const items = response.data.items\n      const repos = []\n      const headers = { 'Authorization' : 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c' }\n\n      items.map((item, index) => {\n        function fetchAdditionalData() {\n          function fetchLastCommitDate() {\n            return axios.get(`https://api.github.com/repos/${item.owner.login}/${item.name}/commits`, { 'headers': headers })\n          }\n\n          function fetchLanguages() {\n            return axios.get(item.languages_url, { 'headers': headers })\n          }\n\n          function fetchContributors() {\n            return axios.get(item.contributors_url, { 'headers': headers })\n          }\n\n          Promise.all([fetchLastCommitDate(), fetchLanguages(), fetchContributors()])\n          .then(function (results) {\n            const [commitsData, languagesData, contributorsData] = results\n\n            const lastCommitDate = new Date(commitsData.data[0].commit.committer.date).toLocaleDateString()\n\n            const languages = Object.keys(languagesData.data)\n\n            const parametres = ['login']\n            let filteredContributors = contributorsData.data\n            .filter((item, index) => index < 10)\n            .map(item => {\n              const contributor = {}\n              Object.keys(item)\n              .filter(key => parametres.includes(key))\n              .map(key => contributor[key] = item[key])\n              return contributor\n            })\n\n            const repo = {\n              name:           item.name,\n              stars:          item.stargazers_count,\n              url:            item.html_url,\n              lastCommitDate: lastCommitDate,\n              languages:      languages,\n              ownerName:      item.owner.login,\n              ownerPhoto:     item.owner.avatar_url,\n              ownerUrl:       item.owner.html_url,\n              description:    item.description,\n              contributors:   filteredContributors,\n            }\n\n            repos[index] = repo\n            setResult({repos: repos})\n            })\n          }\n        fetchAdditionalData()\n        console.log('loading finished');\n\n      })\n    })\n  }\n\n  function handleSearch(value) {\n    setQuery(value);\n    (value !== '') ? fetchRepos(value, '1') : fetchRepos(defaultQuery, '1')\n  }\n\n  useEffect(() => {\n    fetchRepos(defaultQuery, '1')\n  }, [])\n\n  useEffect(() => {\n    // console.log('loading');\n  }, [result])\n\n  return (\n    <div className='Home'>\n      <SearchField onInputChange={handleSearch} />\n      <ResultList repos={result.repos} onResultItemClick={props.onResultItemClick} />\n      <Paginator currentPage={currentPage} onPaginatorClick={handlePaginatorClick} />\n    </div>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}