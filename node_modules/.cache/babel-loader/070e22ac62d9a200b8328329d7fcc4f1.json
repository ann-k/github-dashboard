{"ast":null,"code":"var _jsxFileName = \"/Users/Anna/github/avito-trainee-task/src/Home/Paginator.js\";\nimport React, { useState } from 'react';\n\nfunction Paginator(props) {\n  const rows = [];\n  const {\n    totalCount,\n    perPage,\n    currentPage\n  } = props;\n  const maxNumberOfPages = 10;\n  const availablePages = Math.ceil(totalCount / perPage) < maxNumberOfPages ? Math.ceil(totalCount / perPage) : maxNumberOfPages;\n\n  for (let i = 1; i <= availablePages; i++) {\n    const pageNumber = i;\n\n    if (!(pageNumber > currentPage + 2 || pageNumber < currentPage - 2)) {\n      rows.push( /*#__PURE__*/React.createElement(\"div\", {\n        key: pageNumber,\n        className: pageNumber === currentPage ? 'pageNumber active' : 'pageNumber',\n        onClick: () => handleClick(pageNumber),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }\n      }, pageNumber)));\n    }\n  }\n\n  function handleClick(pageNumber) {\n    props.onPaginatorClick(pageNumber);\n  }\n\n  if (availablePages > 1) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Paginator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, rows);\n  }\n}\n\nexport default Paginator;","map":{"version":3,"sources":["/Users/Anna/github/avito-trainee-task/src/Home/Paginator.js"],"names":["React","useState","Paginator","props","rows","totalCount","perPage","currentPage","maxNumberOfPages","availablePages","Math","ceil","i","pageNumber","push","handleClick","onPaginatorClick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAMC,IAAI,GAAG,EAAb;AACA,QAAM;AAACC,IAAAA,UAAD;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,MAAqCJ,KAA3C;AACA,QAAMK,gBAAgB,GAAG,EAAzB;AACA,QAAMC,cAAc,GAAGC,IAAI,CAACC,IAAL,CAAUN,UAAU,GAAGC,OAAvB,IAAkCE,gBAAlC,GAAqDE,IAAI,CAACC,IAAL,CAAUN,UAAU,GAAGC,OAAvB,CAArD,GAAuFE,gBAA9G;;AAEA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIH,cAArB,EAAqCG,CAAC,EAAtC,EAA0C;AACxC,UAAMC,UAAU,GAAGD,CAAnB;;AACA,QAAI,EAAEC,UAAU,GAAIN,WAAW,GAAG,CAA5B,IAAkCM,UAAU,GAAIN,WAAW,GAAG,CAAhE,CAAJ,EAAyE;AACvEH,MAAAA,IAAI,CAACU,IAAL,eACE;AAAK,QAAA,GAAG,EAAED,UAAV;AACE,QAAA,SAAS,EAAEA,UAAU,KAAKN,WAAf,GAA8B,mBAA9B,GAAoD,YADjE;AAEE,QAAA,OAAO,EAAE,MAAMQ,WAAW,CAACF,UAAD,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,UAAJ,CAHF,CADF;AAOD;AACF;;AAED,WAASE,WAAT,CAAqBF,UAArB,EAAiC;AAC/BV,IAAAA,KAAK,CAACa,gBAAN,CAAuBH,UAAvB;AACD;;AAED,MAAIJ,cAAc,GAAG,CAArB,EAAwB;AACtB,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,IADH,CADF;AAKD;AACF;;AAED,eAAeF,SAAf","sourcesContent":["import React, { useState } from 'react'\n\nfunction Paginator(props) {\n  const rows = []\n  const {totalCount, perPage, currentPage} = props\n  const maxNumberOfPages = 10\n  const availablePages = Math.ceil(totalCount / perPage) < maxNumberOfPages ? Math.ceil(totalCount / perPage) : maxNumberOfPages\n\n  for (let i = 1; i <= availablePages; i++) {\n    const pageNumber = i\n    if (!(pageNumber > (currentPage + 2) || pageNumber < (currentPage - 2))) {\n      rows.push(\n        <div key={pageNumber}\n          className={pageNumber === currentPage ?  'pageNumber active' : 'pageNumber'}\n          onClick={() => handleClick(pageNumber)}>\n          <p>{pageNumber}</p>\n        </div>\n      )\n    }\n  }\n\n  function handleClick(pageNumber) {\n    props.onPaginatorClick(pageNumber)\n  }\n\n  if (availablePages > 1) {\n    return (\n      <div className='Paginator'>\n        {rows}\n      </div>\n    )\n  }\n}\n\nexport default Paginator\n"]},"metadata":{},"sourceType":"module"}