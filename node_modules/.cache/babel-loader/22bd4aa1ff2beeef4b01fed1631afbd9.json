{"ast":null,"code":"var _jsxFileName = \"/Users/Anna/github/avito-trainee-task/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport SearchField from './SearchField.js';\nimport ResultList from './ResultList.js';\nimport Paginator from './Paginator.js'; //HANDLE NO RESULTS!!!\n\nfunction App() {\n  const defaultQuery = 'stars:>100';\n  const [result, setResult] = useState({\n    repos: []\n  });\n  const [activePage, setActivePage] = useState(1);\n  const [query, _setQuery] = useState('');\n  const queryRef = React.useRef(query);\n\n  function setQuery(data) {\n    queryRef.current = data;\n\n    _setQuery(data);\n  }\n\n  function handlePaginatorClick(pageNumber) {\n    getData(queryRef.current, String(pageNumber));\n    setActivePage(pageNumber);\n  }\n\n  function getData(query, page) {\n    const url = `https://api.github.com/search/repositories?q=${query}&sort=stars&order=desc&per_page=3&page=${page}`;\n    const headers = {\n      'Authorization': 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c'\n    };\n    fetch(url, {\n      'headers': headers\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      setRepos(data.items);\n    });\n  }\n\n  function setRepos(items) {\n    const repos = [];\n    items.map(item => {\n      const headers = {\n        'Authorization': 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c'\n      };\n      const urlLastCommitDate = `https://api.github.com/repos/${item.owner.login}/${item.name}/commits`;\n      let getAdditionalData = getContributors(item, 'date'); // let getLastCommitDate = fetch(urlLastCommitDate, { 'headers': headers })\n      //                         .then(response => response.json())\n      //                         .then(data => new Date(data[0].commit.committer.date).toLocaleDateString())\n      //                         .then(date => getContributors(item, date))\n\n      function getContributors(item, date) {\n        fetch(urlLastCommitDate, {\n          'headers': headers\n        }).then(response => response.json()).then(data => new Date(data[0].commit.committer.date).toLocaleDateString()).then(date => setRepo(item, date));\n      }\n    });\n\n    function setRepo(item, date) {\n      console.log(item);\n      let repo = {\n        name: item.name,\n        stars: item.stargazers_count,\n        url: item.html_url,\n        lastCommitDate: date,\n        description: item.description,\n        ownerName: item.owner.login,\n        ownerPhoto: item.owner.avatar_url,\n        ownerUrl: item.owner.html_url\n      };\n      repos.push(repo);\n      setResult({\n        repos: repos\n      });\n    }\n  }\n\n  window.addEventListener('load', () => getData(defaultQuery, '1'));\n\n  function handleSearchInputChange(value) {\n    setQuery(value);\n    value !== '' ? getData(value, '1') : getData(defaultQuery, '1');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchField, {\n    onInputChange: handleSearchInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ResultList, {\n    repos: result.repos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paginator, {\n    activePage: activePage,\n    onPaginatorClick: handlePaginatorClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Anna/github/avito-trainee-task/src/App.js"],"names":["React","useState","SearchField","ResultList","Paginator","App","defaultQuery","result","setResult","repos","activePage","setActivePage","query","_setQuery","queryRef","useRef","setQuery","data","current","handlePaginatorClick","pageNumber","getData","String","page","url","headers","fetch","then","response","json","setRepos","items","map","item","urlLastCommitDate","owner","login","name","getAdditionalData","getContributors","date","Date","commit","committer","toLocaleDateString","setRepo","console","log","repo","stars","stargazers_count","html_url","lastCommitDate","description","ownerName","ownerPhoto","avatar_url","ownerUrl","push","window","addEventListener","handleSearchInputChange","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './App.css';\nimport SearchField from './SearchField.js'\nimport ResultList from './ResultList.js'\nimport Paginator from './Paginator.js'\n\n//HANDLE NO RESULTS!!!\n\nfunction App() {\n  const defaultQuery = 'stars:>100'\n  const [result, setResult] = useState({repos: []})\n  const [activePage, setActivePage] = useState(1)\n\n  const [query, _setQuery] = useState('')\n  const queryRef = React.useRef(query)\n\n  function setQuery(data) {\n    queryRef.current = data\n    _setQuery(data)\n  }\n\n  function handlePaginatorClick(pageNumber) {\n    getData(queryRef.current, String(pageNumber))\n    setActivePage(pageNumber)\n  }\n\n  function getData(query, page) {\n    const url = `https://api.github.com/search/repositories?q=${query}&sort=stars&order=desc&per_page=3&page=${page}`\n    const headers = { 'Authorization' : 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c' }\n\n    fetch(url, { 'headers': headers })\n    .then(response => {\n      return response.json()\n    })\n    .then(data => {\n      setRepos(data.items)\n    })\n  }\n\n\n  function setRepos(items) {\n    const repos = []\n\n    items.map(item => {\n      const headers = { 'Authorization' : 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c' }\n      const urlLastCommitDate = `https://api.github.com/repos/${item.owner.login}/${item.name}/commits`\n      let getAdditionalData = getContributors(item, 'date')\n      // let getLastCommitDate = fetch(urlLastCommitDate, { 'headers': headers })\n      //                         .then(response => response.json())\n      //                         .then(data => new Date(data[0].commit.committer.date).toLocaleDateString())\n      //                         .then(date => getContributors(item, date))\n\n      function getContributors(item, date) {\n        fetch(urlLastCommitDate, { 'headers': headers })\n        .then(response => response.json())\n        .then(data => new Date(data[0].commit.committer.date).toLocaleDateString())\n        .then(date => setRepo(item, date))\n      }\n    })\n\n    function setRepo(item, date) {\n      console.log(item);\n      let repo = {\n        name: item.name,\n        stars: item.stargazers_count,\n        url: item.html_url,\n        lastCommitDate: date,\n        description: item.description,\n        ownerName: item.owner.login,\n        ownerPhoto: item.owner.avatar_url,\n        ownerUrl: item.owner.html_url,\n      }\n      repos.push(repo)\n      setResult({repos: repos})\n    }\n  }\n\n  window.addEventListener('load', () => getData(defaultQuery, '1'))\n\n  function handleSearchInputChange(value) {\n    setQuery(value);\n    (value !== '') ? getData(value, '1') : getData(defaultQuery, '1')\n  }\n\n  return (\n    <div className=\"App\">\n      <SearchField onInputChange={handleSearchInputChange} />\n      <ResultList repos={result.repos} />\n      <Paginator activePage={activePage} onPaginatorClick={handlePaginatorClick} />\n    </div>\n  );\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}