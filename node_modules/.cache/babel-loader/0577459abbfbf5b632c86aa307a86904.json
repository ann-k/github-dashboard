{"ast":null,"code":"var _jsxFileName = \"/Users/Anna/github/avito-trainee-task/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport SearchField from './SearchField.js';\nimport ResultList from './ResultList.js';\nimport Paginator from './Paginator.js'; //HANDLE NO RESULTS!!!\n\nfunction App() {\n  const defaultQuery = 'stars:>100';\n  const [result, setResult] = useState({\n    repos: []\n  });\n  const [activePage, setActivePage] = useState(1);\n  const [query, _setQuery] = useState('');\n  const queryRef = React.useRef(query);\n\n  function setQuery(data) {\n    queryRef.current = data;\n\n    _setQuery(data);\n  }\n\n  function handlePaginatorClick(pageNumber) {\n    getData(queryRef.current, String(pageNumber));\n    setActivePage(pageNumber);\n  }\n\n  function getData(query, page) {\n    const url = 'https://api.github.com/search/repositories?q=' + query + '&sort=stars&order=desc&per_page=3&page=' + page;\n    const headers = {\n      'Authorization': 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c'\n    };\n    fetch(url, {\n      'headers': headers\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      return getRepos(data.items);\n    }).then(data => {\n      let smth = [{\n        name: 'hi bl'\n      }];\n      let smthelse = data;\n      console.log(smth);\n      console.log(smthelse);\n      setResult({\n        repos: smth\n      });\n    });\n  }\n\n  function getRepos(items) {\n    const repos = [];\n    items.map(async item => {\n      let repo = {\n        name: item.name,\n        stars: item.stargazers_count,\n        url: item.html_url\n      };\n      const url = 'https://api.github.com/repos/' + item.owner.login + '/' + item.name + '/commits';\n      const headers = {\n        'Authorization': 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c'\n      };\n      let getLastCommitDate = await fetch(url, {\n        'headers': headers\n      }).then(response => response.json()).then(data => {\n        return new Date(data[0].commit.committer.date).toLocaleDateString(); // console.log(new Date(data[0].commit.committer.date).toLocaleDateString());\n      });\n      repo.lastCommitDate = await getLastCommitDate;\n      repos.push(repo);\n    });\n    return repos;\n  }\n\n  window.addEventListener('load', () => getData(defaultQuery, '1'));\n\n  function handleSearchInputChange(value) {\n    setQuery(value);\n    value !== '' ? getData(value, '1') : getData(defaultQuery, '1');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchField, {\n    onInputChange: handleSearchInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ResultList, {\n    repos: result.repos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paginator, {\n    activePage: activePage,\n    onPaginatorClick: handlePaginatorClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Anna/github/avito-trainee-task/src/App.js"],"names":["React","useState","SearchField","ResultList","Paginator","App","defaultQuery","result","setResult","repos","activePage","setActivePage","query","_setQuery","queryRef","useRef","setQuery","data","current","handlePaginatorClick","pageNumber","getData","String","page","url","headers","fetch","then","response","json","getRepos","items","smth","name","smthelse","console","log","map","item","repo","stars","stargazers_count","html_url","owner","login","getLastCommitDate","Date","commit","committer","date","toLocaleDateString","lastCommitDate","push","window","addEventListener","handleSearchInputChange","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './App.css';\nimport SearchField from './SearchField.js'\nimport ResultList from './ResultList.js'\nimport Paginator from './Paginator.js'\n\n//HANDLE NO RESULTS!!!\n\nfunction App() {\n  const defaultQuery = 'stars:>100'\n  const [result, setResult] = useState({repos: []})\n  const [activePage, setActivePage] = useState(1)\n\n  const [query, _setQuery] = useState('')\n  const queryRef = React.useRef(query)\n\n  function setQuery(data) {\n    queryRef.current = data\n    _setQuery(data)\n  }\n\n  function handlePaginatorClick(pageNumber) {\n    getData(queryRef.current, String(pageNumber))\n    setActivePage(pageNumber)\n  }\n\n  function getData(query, page) {\n    const url = 'https://api.github.com/search/repositories?q=' + query + '&sort=stars&order=desc&per_page=3&page=' + page\n    const headers = { 'Authorization' : 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c' }\n\n    fetch(url, { 'headers': headers })\n    .then(response => {\n      return response.json()\n    })\n    .then(data => {\n      return getRepos(data.items)\n    }).then(data => {\n      let smth = [{name: 'hi bl'}]\n      let smthelse = data\n      console.log(smth);\n      console.log(smthelse);\n      setResult({repos: smth})\n    })\n  }\n\n\n  function getRepos(items) {\n    const repos = []\n    items.map(async (item) => {\n      let repo = {\n        name: item.name,\n        stars: item.stargazers_count,\n        url: item.html_url,\n      }\n\n      const url = 'https://api.github.com/repos/' + item.owner.login + '/' + item.name + '/commits'\n      const headers = { 'Authorization' : 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c' }\n      let getLastCommitDate = await fetch(url, { 'headers': headers })\n      .then(response => response.json())\n      .then(data => {\n        return new Date(data[0].commit.committer.date).toLocaleDateString()\n        // console.log(new Date(data[0].commit.committer.date).toLocaleDateString());\n      })\n\n      repo.lastCommitDate = await getLastCommitDate\n      repos.push(repo)\n    })\n    return repos\n  }\n\n\n\n\n\n\n\n  window.addEventListener('load', () => getData(defaultQuery, '1'))\n\n  function handleSearchInputChange(value) {\n    setQuery(value);\n    (value !== '') ? getData(value, '1') : getData(defaultQuery, '1')\n  }\n\n  return (\n    <div className=\"App\">\n      <SearchField onInputChange={handleSearchInputChange} />\n      <ResultList repos={result.repos} />\n      <Paginator activePage={activePage} onPaginatorClick={handlePaginatorClick} />\n    </div>\n  );\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}