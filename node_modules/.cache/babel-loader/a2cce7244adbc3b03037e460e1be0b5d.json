{"ast":null,"code":"var _jsxFileName = \"/Users/Anna/github/avito-trainee-task/src/Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport SearchField from './SearchField.js';\nimport ResultList from './ResultList.js';\nimport Paginator from './Paginator.js';\n\nconst axios = require('axios'); //HANDLE NO RESULTS!!!\n//what if no owner photo is provided\n// what new stuff i learned in this project:\n// used hooks for the first time\n// used react router (with nested routes)\n// used axios instead of fetch\n// learned about local storage and session storage and how to use them\n\n\nfunction Home(props) {\n  const [result, setResult] = useState({\n    repos: []\n  });\n  const [totalCount, setTotalCount] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [preloader, setPreloader] = useState(false);\n  const [userQuery, _setUserQuery] = useState('');\n  const userQueryRef = React.useRef(userQuery);\n  const defaultQuery = 'stars:>100';\n  const perPage = '2';\n\n  function handleSearch(value) {\n    setUserQuery(value);\n    setResult({\n      repos: []\n    });\n    setPreloader(true);\n    setCurrentPage(1);\n  }\n\n  function setUserQuery(data) {\n    userQueryRef.current = data;\n\n    _setUserQuery(data);\n  }\n\n  function handlePaginatorClick(pageNumber) {\n    setCurrentPage(pageNumber);\n    setResult({\n      repos: []\n    });\n  }\n\n  useEffect(() => {\n    setPreloader(true);\n    const query = userQuery !== '' ? userQuery : defaultQuery;\n    const url = `https://api.github.com/search/repositories?q=${query}&sort=stars&order=desc&per_page=${perPage}&page=${currentPage}`;\n    const headers = {\n      'Authorization': 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c'\n    };\n    axios.get(url, {\n      'headers': headers\n    }).then(response => {\n      setTotalCount(response.data.total_count);\n      console.log(response.data.total_count);\n      const items = response.data.items;\n      const repos = [];\n      const headers = {\n        'Authorization': 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c'\n      };\n      items.map((item, index) => {\n        function fetchAdditionalData() {\n          function fetchLastCommitDate() {\n            return axios.get(`https://api.github.com/repos/${item.owner.login}/${item.name}/commits`, {\n              'headers': headers\n            });\n          }\n\n          function fetchLanguages() {\n            return axios.get(item.languages_url, {\n              'headers': headers\n            });\n          }\n\n          function fetchContributors() {\n            return axios.get(item.contributors_url, {\n              'headers': headers\n            });\n          }\n\n          Promise.all([fetchLastCommitDate(), fetchLanguages(), fetchContributors()]).then(function (results) {\n            const [commitsData, languagesData, contributorsData] = results;\n            const lastCommitDate = new Date(commitsData.data[0].commit.committer.date).toLocaleDateString();\n            const languages = Object.keys(languagesData.data);\n            const parametres = ['login'];\n            let filteredContributors = contributorsData.data.filter((item, index) => index < 10).map(item => {\n              const contributor = {};\n              Object.keys(item).filter(key => parametres.includes(key)).map(key => contributor[key] = item[key]);\n              return contributor;\n            });\n            const repo = {\n              name: item.name,\n              stars: item.stargazers_count,\n              url: item.html_url,\n              lastCommitDate: lastCommitDate,\n              languages: languages,\n              ownerName: item.owner.login,\n              ownerPhoto: item.owner.avatar_url,\n              ownerUrl: item.owner.html_url,\n              description: item.description,\n              contributors: filteredContributors\n            };\n            repos[index] = repo;\n            setResult({\n              repos: repos\n            });\n          });\n        }\n\n        fetchAdditionalData();\n      });\n    }).then(() => setPreloader(false));\n  }, [userQuery, currentPage]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchField, {\n    onInputChange: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ResultList, {\n    repos: result.repos,\n    onResultItemClick: props.onResultItemClick,\n    preloader: preloader,\n    totalCount: totalCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }), userQuery !== '' ? /*#__PURE__*/React.createElement(Paginator, {\n    currentPage: currentPage,\n    onPaginatorClick: handlePaginatorClick,\n    totalCount: totalCount,\n    perPage: perPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }) : null);\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/Anna/github/avito-trainee-task/src/Home.js"],"names":["React","useState","useEffect","SearchField","ResultList","Paginator","axios","require","Home","props","result","setResult","repos","totalCount","setTotalCount","currentPage","setCurrentPage","preloader","setPreloader","userQuery","_setUserQuery","userQueryRef","useRef","defaultQuery","perPage","handleSearch","value","setUserQuery","data","current","handlePaginatorClick","pageNumber","query","url","headers","get","then","response","total_count","console","log","items","map","item","index","fetchAdditionalData","fetchLastCommitDate","owner","login","name","fetchLanguages","languages_url","fetchContributors","contributors_url","Promise","all","results","commitsData","languagesData","contributorsData","lastCommitDate","Date","commit","committer","date","toLocaleDateString","languages","Object","keys","parametres","filteredContributors","filter","contributor","key","includes","repo","stars","stargazers_count","html_url","ownerName","ownerPhoto","avatar_url","ownerUrl","description","contributors","onResultItemClick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport SearchField from './SearchField.js'\nimport ResultList from './ResultList.js'\nimport Paginator from './Paginator.js'\nconst axios = require('axios')\n\n//HANDLE NO RESULTS!!!\n//what if no owner photo is provided\n// what new stuff i learned in this project:\n// used hooks for the first time\n// used react router (with nested routes)\n// used axios instead of fetch\n// learned about local storage and session storage and how to use them\n\nfunction Home(props) {\n  const [result, setResult] = useState({repos: []})\n  const [totalCount, setTotalCount] = useState(0)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [preloader, setPreloader] = useState(false)\n  const [userQuery, _setUserQuery] = useState('')\n  const userQueryRef = React.useRef(userQuery)\n\n  const defaultQuery = 'stars:>100'\n  const perPage = '2'\n\n  function handleSearch(value) {\n    setUserQuery(value)\n    setResult({repos: []})\n    setPreloader(true)\n    setCurrentPage(1)\n  }\n\n  function setUserQuery(data) {\n    userQueryRef.current = data\n    _setUserQuery(data)\n  }\n\n  function handlePaginatorClick(pageNumber) {\n    setCurrentPage(pageNumber)\n    setResult({repos: []})\n  }\n\n  useEffect(() => {\n    setPreloader(true)\n    const query = (userQuery !== '') ? userQuery : defaultQuery\n    const url = `https://api.github.com/search/repositories?q=${query}&sort=stars&order=desc&per_page=${perPage}&page=${currentPage}`\n    const headers = { 'Authorization' : 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c' }\n\n    axios.get(url, { 'headers': headers })\n    .then(response => {\n      setTotalCount(response.data.total_count)\n      console.log(response.data.total_count);\n      const items = response.data.items\n      const repos = []\n      const headers = { 'Authorization' : 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c' }\n\n      items.map((item, index) => {\n        function fetchAdditionalData() {\n          function fetchLastCommitDate() {\n            return axios.get(`https://api.github.com/repos/${item.owner.login}/${item.name}/commits`, { 'headers': headers })\n          }\n\n          function fetchLanguages() {\n            return axios.get(item.languages_url, { 'headers': headers })\n          }\n\n          function fetchContributors() {\n            return axios.get(item.contributors_url, { 'headers': headers })\n          }\n\n          Promise.all([fetchLastCommitDate(), fetchLanguages(), fetchContributors()])\n          .then(function (results) {\n            const [commitsData, languagesData, contributorsData] = results\n\n            const lastCommitDate = new Date(commitsData.data[0].commit.committer.date).toLocaleDateString()\n\n            const languages = Object.keys(languagesData.data)\n\n            const parametres = ['login']\n            let filteredContributors = contributorsData.data\n            .filter((item, index) => index < 10)\n            .map(item => {\n              const contributor = {}\n              Object.keys(item)\n              .filter(key => parametres.includes(key))\n              .map(key => contributor[key] = item[key])\n              return contributor\n            })\n\n            const repo = {\n              name:           item.name,\n              stars:          item.stargazers_count,\n              url:            item.html_url,\n              lastCommitDate: lastCommitDate,\n              languages:      languages,\n              ownerName:      item.owner.login,\n              ownerPhoto:     item.owner.avatar_url,\n              ownerUrl:       item.owner.html_url,\n              description:    item.description,\n              contributors:   filteredContributors,\n            }\n\n            repos[index] = repo\n            setResult({repos: repos})\n            })\n          }\n        fetchAdditionalData()\n      })\n    })\n    .then(() => setPreloader(false))\n\n  }, [userQuery, currentPage])\n\n  return (\n    <div className='Home'>\n      <SearchField onInputChange={handleSearch} />\n      <ResultList repos={result.repos}\n                  onResultItemClick={props.onResultItemClick}\n                  preloader={preloader}\n                  totalCount={totalCount} />\n      {userQuery !== ''\n      ? <Paginator currentPage={currentPage}\n                   onPaginatorClick={handlePaginatorClick}\n                   totalCount={totalCount}\n                   perPage={perPage} />\n      : null}\n    </div>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}