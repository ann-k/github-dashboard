{"ast":null,"code":"var _jsxFileName = \"/Users/Anna/github/avito-trainee-task/src/Home.js\";\nimport React, { useState } from 'react';\nimport SearchField from './SearchField.js';\nimport ResultList from './ResultList.js';\nimport Paginator from './Paginator.js';\n\nconst axios = require('axios'); //HANDLE NO RESULTS!!!\n//PRELOADER\n//what if no owner photo is provided\n// what new i learned in this project:\n// used hooks for the first time\n// used react router (with nested routes)\n// used axios instead of fetch\n\n\nfunction Home(props) {\n  const defaultQuery = 'stars:>100';\n  const [result, setResult] = useState({\n    repos: []\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [query, _setQuery] = useState('');\n  const queryRef = React.useRef(query);\n\n  function setQuery(data) {\n    queryRef.current = data;\n\n    _setQuery(data);\n  }\n\n  function handlePaginatorClick(pageNumber) {\n    getData(queryRef.current, String(pageNumber));\n    setCurrentPage(pageNumber);\n  }\n\n  function getData(query, page) {\n    const url = `https://api.github.com/search/repositories?q=${query}&sort=stars&order=desc&per_page=2&page=${page}`;\n    const headers = {\n      'Authorization': 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c'\n    };\n    axios.get(url, {\n      'headers': headers\n    }).then(response => fetchRepos(response.data.items));\n  }\n\n  function fetchRepos(items) {\n    const repos = [];\n    const headers = {\n      'Authorization': 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c'\n    };\n    const smthelse = items.map(async (item, index) => {\n      // const gatherAdditionalData = () => {\n      function fetchLastCommitDate() {\n        return axios.get(`https://api.github.com/repos/${item.owner.login}/${item.name}/commits`, {\n          'headers': headers\n        });\n      }\n\n      function fetchLanguages() {\n        return axios.get(item.languages_url, {\n          'headers': headers\n        });\n      }\n\n      function fetchContributors() {\n        return axios.get(item.contributors_url, {\n          'headers': headers\n        });\n      }\n\n      Promise.all([fetchLastCommitDate(), fetchLanguages(), fetchContributors()]).then(function (results) {\n        const [commitsData, languagesData, contributorsData] = results;\n        console.log(contributorsData);\n        const lastCommitDate = new Date(commitsData.data[0].commit.committer.date).toLocaleDateString();\n        const languages = Object.keys(languagesData.data);\n        const parametres = ['login'];\n        let filteredContributors = contributorsData.data.filter((item, index) => index < 10).map(item => {\n          const contributor = {};\n          Object.keys(item).filter(key => parametres.includes(key)).map(key => contributor[key] = item[key]);\n          return contributor;\n        });\n        const repo = {\n          name: item.name,\n          stars: item.stargazers_count,\n          url: item.html_url,\n          lastCommitDate: lastCommitDate,\n          languages: languages,\n          ownerName: item.owner.login,\n          ownerPhoto: item.owner.avatar_url,\n          ownerUrl: item.owner.html_url,\n          description: item.description,\n          contributors: filteredContributors\n        };\n        repos.push(repo);\n        setResult({\n          repos: repos\n        });\n        return repo;\n      }); // }\n      // gatherAdditionalData()\n\n      return await smthelse();\n    });\n    console.log(smthelse); // console.log('REPOS ARE', repos[0]);\n  } // window.addEventListener('load', () => getData(defaultQuery, '1'))\n\n\n  function handleSearch(value) {\n    setQuery(value);\n    value !== '' ? getData(value, '1') : getData(defaultQuery, '1');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchField, {\n    onInputChange: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ResultList, {\n    repos: result.repos,\n    onResultItemClick: props.onResultItemClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paginator, {\n    currentPage: currentPage,\n    onPaginatorClick: handlePaginatorClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/Anna/github/avito-trainee-task/src/Home.js"],"names":["React","useState","SearchField","ResultList","Paginator","axios","require","Home","props","defaultQuery","result","setResult","repos","currentPage","setCurrentPage","query","_setQuery","queryRef","useRef","setQuery","data","current","handlePaginatorClick","pageNumber","getData","String","page","url","headers","get","then","response","fetchRepos","items","smthelse","map","item","index","fetchLastCommitDate","owner","login","name","fetchLanguages","languages_url","fetchContributors","contributors_url","Promise","all","results","commitsData","languagesData","contributorsData","console","log","lastCommitDate","Date","commit","committer","date","toLocaleDateString","languages","Object","keys","parametres","filteredContributors","filter","contributor","key","includes","repo","stars","stargazers_count","html_url","ownerName","ownerPhoto","avatar_url","ownerUrl","description","contributors","push","handleSearch","value","onResultItemClick"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport SearchField from './SearchField.js'\nimport ResultList from './ResultList.js'\nimport Paginator from './Paginator.js'\nconst axios = require('axios')\n\n//HANDLE NO RESULTS!!!\n//PRELOADER\n//what if no owner photo is provided\n// what new i learned in this project:\n// used hooks for the first time\n// used react router (with nested routes)\n// used axios instead of fetch\n\nfunction Home(props) {\n  const defaultQuery = 'stars:>100'\n  const [result, setResult] = useState({repos: []})\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const [query, _setQuery] = useState('')\n  const queryRef = React.useRef(query)\n\n  function setQuery(data) {\n    queryRef.current = data\n    _setQuery(data)\n  }\n\n  function handlePaginatorClick(pageNumber) {\n    getData(queryRef.current, String(pageNumber))\n    setCurrentPage(pageNumber)\n  }\n\n  function getData(query, page) {\n    const url = `https://api.github.com/search/repositories?q=${query}&sort=stars&order=desc&per_page=2&page=${page}`\n    const headers = { 'Authorization' : 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c' }\n\n    axios.get(url, { 'headers': headers })\n    .then(response => fetchRepos(response.data.items))\n  }\n\n\n\n  function fetchRepos(items) {\n    const repos = []\n    const headers = { 'Authorization' : 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c' }\n\n    const smthelse = items.map(async (item, index) => {\n      // const gatherAdditionalData = () => {\n        function fetchLastCommitDate() {\n          return axios.get(`https://api.github.com/repos/${item.owner.login}/${item.name}/commits`, { 'headers': headers })\n        }\n\n        function fetchLanguages() {\n          return axios.get(item.languages_url, { 'headers': headers })\n        }\n\n        function fetchContributors() {\n          return axios.get(item.contributors_url, { 'headers': headers })\n        }\n\n        Promise.all([fetchLastCommitDate(), fetchLanguages(), fetchContributors()])\n        .then(function (results) {\n          const [commitsData, languagesData, contributorsData] = results\n          console.log(contributorsData);\n\n          const lastCommitDate = new Date(commitsData.data[0].commit.committer.date).toLocaleDateString()\n          const languages = Object.keys(languagesData.data)\n\n          const parametres = ['login']\n          let filteredContributors = contributorsData.data\n            .filter((item, index) => index < 10)\n            .map(item => {\n               const contributor = {}\n               Object.keys(item)\n               .filter(key => parametres.includes(key))\n               .map(key => contributor[key] = item[key])\n               return contributor\n            })\n\n          const repo = {\n            name:           item.name,\n            stars:          item.stargazers_count,\n            url:            item.html_url,\n            lastCommitDate: lastCommitDate,\n            languages:      languages,\n            ownerName:      item.owner.login,\n            ownerPhoto:     item.owner.avatar_url,\n            ownerUrl:       item.owner.html_url,\n            description:    item.description,\n            contributors:   filteredContributors,\n          }\n          repos.push(repo)\n          setResult({repos: repos})\n          return repo\n        })\n      // }\n      // gatherAdditionalData()\n      return await smthelse()\n    })\n\n    console.log(smthelse);\n\n    // console.log('REPOS ARE', repos[0]);\n\n  }\n\n  // window.addEventListener('load', () => getData(defaultQuery, '1'))\n\n  function handleSearch(value) {\n    setQuery(value);\n    (value !== '') ? getData(value, '1') : getData(defaultQuery, '1')\n  }\n\n  return (\n    <div className='Home'>\n      <SearchField onInputChange={handleSearch} />\n      <ResultList repos={result.repos} onResultItemClick={props.onResultItemClick} />\n      <Paginator currentPage={currentPage} onPaginatorClick={handlePaginatorClick} />\n    </div>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}