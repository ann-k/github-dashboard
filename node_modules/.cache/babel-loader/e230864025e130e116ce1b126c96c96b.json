{"ast":null,"code":"var _jsxFileName = \"/Users/Anna/github/avito-trainee-task/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport SearchField from './SearchField.js';\nimport ResultList from './ResultList.js';\nimport Paginator from './Paginator.js'; //HANDLE NO RESULTS!!!\n\nfunction App() {\n  const defaultQuery = 'stars:>100';\n  const [result, setResult] = useState({\n    repos: []\n  });\n  const [activePage, setActivePage] = useState(1);\n  const [query, _setQuery] = useState('');\n  const queryRef = React.useRef(query);\n  const [lastCommitDate, setLastCommitDate] = useState('');\n\n  function setQuery(data) {\n    queryRef.current = data;\n\n    _setQuery(data);\n  }\n\n  function handlePaginatorClick(pageNumber) {\n    getData(queryRef.current, String(pageNumber));\n    setActivePage(pageNumber);\n  }\n\n  function getData(query, page) {\n    const url = 'https://api.github.com/search/repositories?q=' + query + '&sort=stars&order=desc&per_page=3&page=' + page;\n    const headers = {\n      'Authorization': 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c'\n    };\n    fetch(url, {\n      'headers': headers\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      getRepos(data.items);\n    });\n  }\n\n  function getRepos(items) {\n    const repos = [];\n    items.map(item => {\n      let repo = {\n        name: item.name,\n        stars: item.stargazers_count,\n        url: item.html_url,\n        lastCommitDate: getLastCommitDate(item)\n      };\n      repos.push(repo);\n      console.log(repo.lastCommitDate);\n    });\n    setResult({\n      repos: repos\n    });\n    return repos;\n  }\n\n  function getLastCommitDate(item) {\n    const url = 'https://api.github.com/repos/' + item.owner.login + '/' + item.name + '/commits';\n    const headers = {\n      'Authorization': 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c'\n    };\n    fetch(url, {\n      'headers': headers\n    }).then(response => response.json()).then(data => {\n      setLastCommitDate('HELLO');\n      console.log(lastCommitDate); // console.log(new Date(data[0].commit.committer.date).toLocaleDateString());\n    });\n    return lastCommitDate;\n  }\n\n  window.addEventListener('load', () => getData(defaultQuery, '1'));\n\n  function handleSearchInputChange(value) {\n    setQuery(value);\n    value !== '' ? getData(value, '1') : getData(defaultQuery, '1');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchField, {\n    onInputChange: handleSearchInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ResultList, {\n    repos: result.repos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paginator, {\n    activePage: activePage,\n    onPaginatorClick: handlePaginatorClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Anna/github/avito-trainee-task/src/App.js"],"names":["React","useState","SearchField","ResultList","Paginator","App","defaultQuery","result","setResult","repos","activePage","setActivePage","query","_setQuery","queryRef","useRef","lastCommitDate","setLastCommitDate","setQuery","data","current","handlePaginatorClick","pageNumber","getData","String","page","url","headers","fetch","then","response","json","getRepos","items","map","item","repo","name","stars","stargazers_count","html_url","getLastCommitDate","push","console","log","owner","login","window","addEventListener","handleSearchInputChange","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './App.css';\nimport SearchField from './SearchField.js'\nimport ResultList from './ResultList.js'\nimport Paginator from './Paginator.js'\n\n//HANDLE NO RESULTS!!!\n\nfunction App() {\n  const defaultQuery = 'stars:>100'\n  const [result, setResult] = useState({repos: []})\n  const [activePage, setActivePage] = useState(1)\n\n  const [query, _setQuery] = useState('')\n  const queryRef = React.useRef(query)\n\n  const [lastCommitDate, setLastCommitDate] = useState('')\n\n  function setQuery(data) {\n    queryRef.current = data\n    _setQuery(data)\n  }\n\n  function handlePaginatorClick(pageNumber) {\n    getData(queryRef.current, String(pageNumber))\n    setActivePage(pageNumber)\n  }\n\n  function getData(query, page) {\n    const url = 'https://api.github.com/search/repositories?q=' + query + '&sort=stars&order=desc&per_page=3&page=' + page\n    const headers = { 'Authorization' : 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c' }\n\n    fetch(url, { 'headers': headers })\n    .then(response => {\n      return response.json()\n    })\n    .then(data => {\n      getRepos(data.items)\n    })\n  }\n\n  function getRepos(items) {\n    const repos = []\n    items.map(item => {\n      let repo = {\n        name: item.name,\n        stars: item.stargazers_count,\n        url: item.html_url,\n        lastCommitDate: getLastCommitDate(item),\n      }\n\n\n\n\n      repos.push(repo)\n      console.log(repo.lastCommitDate);\n    })\n    setResult({repos: repos})\n\n    return repos\n  }\n\n  function getLastCommitDate(item) {\n    const url = 'https://api.github.com/repos/' + item.owner.login + '/' + item.name + '/commits'\n    const headers = { 'Authorization' : 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c' }\n\n    fetch(url, { 'headers': headers })\n    .then(response => response.json())\n    .then(data => {\n      setLastCommitDate('HELLO');\n      console.log(lastCommitDate);\n      // console.log(new Date(data[0].commit.committer.date).toLocaleDateString());\n    })\n    return lastCommitDate\n  }\n\n  window.addEventListener('load', () => getData(defaultQuery, '1'))\n\n  function handleSearchInputChange(value) {\n    setQuery(value);\n    (value !== '') ? getData(value, '1') : getData(defaultQuery, '1')\n  }\n\n  return (\n    <div className=\"App\">\n      <SearchField onInputChange={handleSearchInputChange} />\n      <ResultList repos={result.repos} />\n      <Paginator activePage={activePage} onPaginatorClick={handlePaginatorClick} />\n    </div>\n  );\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}