{"ast":null,"code":"var _jsxFileName = \"/Users/Anna/github/avito-trainee-task/src/Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport SearchField from './SearchField.js';\nimport ResultList from './ResultList.js';\nimport Paginator from './Paginator.js';\n\nconst axios = require('axios'); //HANDLE NO RESULTS!!!\n//what if no owner photo is provided\n// what new stuff i learned in this project:\n// used hooks for the first time\n// used react router (with nested routes)\n// used axios instead of fetch\n// learned about local storage and session storage and how to use them\n\n\nfunction Home(props) {\n  const [result, setResult] = useState({\n    repos: []\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [preloader, setPreloader] = useState(false);\n  const [notFound, setNotFound] = useState(false);\n  const [query, _setQuery] = useState('');\n  const queryRef = React.useRef(query);\n  const defaultQuery = 'stars:>100';\n  const perPage = '10';\n\n  function setQuery(data) {\n    queryRef.current = data;\n\n    _setQuery(data);\n  }\n\n  function handlePaginatorClick(pageNumber) {\n    fetchRepos(queryRef.current, String(pageNumber));\n    setCurrentPage(pageNumber);\n  }\n\n  function fetchRepos(query, page) {\n    const url = `https://api.github.com/search/repositories?q=${query}&sort=stars&order=desc&per_page=2&page=${page}`;\n    const headers = {\n      'Authorization': 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c'\n    };\n    axios.get(url, {\n      'headers': headers\n    }).then(response => {\n      const items = response.data.items;\n\n      if (items.length === 0) {\n        console.log('404');\n      }\n\n      const repos = [];\n      const headers = {\n        'Authorization': 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c'\n      };\n      items.map((item, index) => {\n        function fetchAdditionalData() {\n          function fetchLastCommitDate() {\n            return axios.get(`https://api.github.com/repos/${item.owner.login}/${item.name}/commits`, {\n              'headers': headers\n            });\n          }\n\n          function fetchLanguages() {\n            return axios.get(item.languages_url, {\n              'headers': headers\n            });\n          }\n\n          function fetchContributors() {\n            return axios.get(item.contributors_url, {\n              'headers': headers\n            });\n          }\n\n          Promise.all([fetchLastCommitDate(), fetchLanguages(), fetchContributors()]).then(function (results) {\n            const [commitsData, languagesData, contributorsData] = results;\n            const lastCommitDate = new Date(commitsData.data[0].commit.committer.date).toLocaleDateString();\n            const languages = Object.keys(languagesData.data);\n            const parametres = ['login'];\n            let filteredContributors = contributorsData.data.filter((item, index) => index < 10).map(item => {\n              const contributor = {};\n              Object.keys(item).filter(key => parametres.includes(key)).map(key => contributor[key] = item[key]);\n              return contributor;\n            });\n            const repo = {\n              name: item.name,\n              stars: item.stargazers_count,\n              url: item.html_url,\n              lastCommitDate: lastCommitDate,\n              languages: languages,\n              ownerName: item.owner.login,\n              ownerPhoto: item.owner.avatar_url,\n              ownerUrl: item.owner.html_url,\n              description: item.description,\n              contributors: filteredContributors\n            };\n            repos[index] = repo;\n            setResult({\n              repos: repos\n            });\n          });\n        }\n\n        fetchAdditionalData();\n      });\n    }).then(() => setPreloader(false));\n  }\n\n  function handleSearch(value) {\n    setQuery(value);\n    setResult({\n      repos: []\n    });\n    setPreloader(true);\n    setCurrentPage(1);\n    value !== '' ? fetchRepos(value, '1') : fetchRepos(defaultQuery, '1');\n  }\n\n  useEffect(() => {\n    setPreloader(true);\n    fetchRepos(defaultQuery, '1'); // localStorage.setItem('name')\n    // const hi = localStorage.getItem('name')\n    // console.log(hi);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchField, {\n    onInputChange: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ResultList, {\n    repos: result.repos,\n    onResultItemClick: props.onResultItemClick,\n    preloader: preloader,\n    notFound: notFound,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }), query !== '' ? /*#__PURE__*/React.createElement(Paginator, {\n    currentPage: currentPage,\n    onPaginatorClick: handlePaginatorClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }) : null);\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/Anna/github/avito-trainee-task/src/Home.js"],"names":["React","useState","useEffect","SearchField","ResultList","Paginator","axios","require","Home","props","result","setResult","repos","currentPage","setCurrentPage","preloader","setPreloader","notFound","setNotFound","query","_setQuery","queryRef","useRef","defaultQuery","perPage","setQuery","data","current","handlePaginatorClick","pageNumber","fetchRepos","String","page","url","headers","get","then","response","items","length","console","log","map","item","index","fetchAdditionalData","fetchLastCommitDate","owner","login","name","fetchLanguages","languages_url","fetchContributors","contributors_url","Promise","all","results","commitsData","languagesData","contributorsData","lastCommitDate","Date","commit","committer","date","toLocaleDateString","languages","Object","keys","parametres","filteredContributors","filter","contributor","key","includes","repo","stars","stargazers_count","html_url","ownerName","ownerPhoto","avatar_url","ownerUrl","description","contributors","handleSearch","value","onResultItemClick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport SearchField from './SearchField.js'\nimport ResultList from './ResultList.js'\nimport Paginator from './Paginator.js'\nconst axios = require('axios')\n\n//HANDLE NO RESULTS!!!\n//what if no owner photo is provided\n// what new stuff i learned in this project:\n// used hooks for the first time\n// used react router (with nested routes)\n// used axios instead of fetch\n// learned about local storage and session storage and how to use them\n\nfunction Home(props) {\n  const [result, setResult] = useState({repos: []})\n  const [currentPage, setCurrentPage] = useState(1)\n  const [preloader, setPreloader] = useState(false)\n  const [notFound, setNotFound] = useState(false)\n  const [query, _setQuery] = useState('')\n  const queryRef = React.useRef(query)\n\n  const defaultQuery = 'stars:>100'\n  const perPage = '10'\n\n  function setQuery(data) {\n    queryRef.current = data\n    _setQuery(data)\n  }\n\n  function handlePaginatorClick(pageNumber) {\n    fetchRepos(queryRef.current, String(pageNumber))\n    setCurrentPage(pageNumber)\n  }\n\n  function fetchRepos(query, page) {\n    const url = `https://api.github.com/search/repositories?q=${query}&sort=stars&order=desc&per_page=2&page=${page}`\n    const headers = { 'Authorization' : 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c' }\n\n    axios.get(url, { 'headers': headers })\n    .then(response => {\n      const items = response.data.items\n      if (items.length === 0) { console.log('404');}\n      const repos = []\n      const headers = { 'Authorization' : 'token 29e60afef909b3a9a1af5c6a80daee1da70ea57c' }\n\n      items.map((item, index) => {\n        function fetchAdditionalData() {\n          function fetchLastCommitDate() {\n            return axios.get(`https://api.github.com/repos/${item.owner.login}/${item.name}/commits`, { 'headers': headers })\n          }\n\n          function fetchLanguages() {\n            return axios.get(item.languages_url, { 'headers': headers })\n          }\n\n          function fetchContributors() {\n            return axios.get(item.contributors_url, { 'headers': headers })\n          }\n\n          Promise.all([fetchLastCommitDate(), fetchLanguages(), fetchContributors()])\n          .then(function (results) {\n            const [commitsData, languagesData, contributorsData] = results\n\n            const lastCommitDate = new Date(commitsData.data[0].commit.committer.date).toLocaleDateString()\n\n            const languages = Object.keys(languagesData.data)\n\n            const parametres = ['login']\n            let filteredContributors = contributorsData.data\n            .filter((item, index) => index < 10)\n            .map(item => {\n              const contributor = {}\n              Object.keys(item)\n              .filter(key => parametres.includes(key))\n              .map(key => contributor[key] = item[key])\n              return contributor\n            })\n\n            const repo = {\n              name:           item.name,\n              stars:          item.stargazers_count,\n              url:            item.html_url,\n              lastCommitDate: lastCommitDate,\n              languages:      languages,\n              ownerName:      item.owner.login,\n              ownerPhoto:     item.owner.avatar_url,\n              ownerUrl:       item.owner.html_url,\n              description:    item.description,\n              contributors:   filteredContributors,\n            }\n\n            repos[index] = repo\n            setResult({repos: repos})\n            })\n          }\n        fetchAdditionalData()\n      })\n    })\n    .then(() => setPreloader(false))\n  }\n\n  function handleSearch(value) {\n    setQuery(value);\n    setResult({repos: []});\n    setPreloader(true);\n    setCurrentPage(1);\n    (value !== '') ? fetchRepos(value, '1') : fetchRepos(defaultQuery, '1')\n  }\n\n  useEffect(() => {\n    setPreloader(true)\n    fetchRepos(defaultQuery, '1')\n    // localStorage.setItem('name')\n    // const hi = localStorage.getItem('name')\n    // console.log(hi);\n  }, [])\n\n  return (\n    <div className='Home'>\n      <SearchField onInputChange={handleSearch} />\n      <ResultList repos={result.repos}\n                  onResultItemClick={props.onResultItemClick}\n                  preloader={preloader}\n                  notFound={notFound} />\n      {query !== ''\n      ? <Paginator currentPage={currentPage} onPaginatorClick={handlePaginatorClick} />\n      : null}\n    </div>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}